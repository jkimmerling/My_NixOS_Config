timedatectl set-ntp true
fdisk -l
parted /dev/nvme0n1 -- mklabel gpt
parted /dev/nvme0n1 -- mkpart ESP fat32 1MiB 512MiB
parted /dev/nvme0n1 -- mkpart primary 512MiB -48GiB
parted /dev/nvme0n1 -- mkpart primary linux-swap -48GiB 100%GiB

parted /dev/nvme0n1 -- set 1 esp on

mkfs.fat -F32 /dev/nvme0n1p1
mkfs.btrfs /dev/nvme0n1p2
mkswap /dev/nvme0n1p3

mount /dev/nvme0n1p2 /mnt
swapon /dev/nvme0n1p3
btrfs subvolume create /mnt/@
btrfs subvolume create /mnt/@home
btrfs subvolume create /mnt/@var
umount /mnt
mount -o subvol=@,ssd,compress=zstd,noatime,nodiratime /dev/nvme0n1p2 /mnt
mkdir -p /mnt/{boot,home,var}
mount -o subvol=@home,ssd,compress=zstd,noatime,nodiratime /dev/nvme0n1p2 /mnt/home
mount -o subvol=@var,ssd,compress=zstd,noatime,nodiratime /dev/nvme0n1p2 /mnt/var
mount /dev/nvme0n1p1 /mnt/boot

/etc/pacman.conf

[multilib]
Include = /etc/pacman.d/mirrorlist

pacstrap -c /mnt base base-devel linux linux-firmware btrfs-progs zsh zsh-autosuggestions zsh-completions intel-ucode vim nano firefox steam
                 kitty alacritty vscode jupyterlab r rust

genfstab -U /mnt >> /mnt/etc/fstab
cat /mnt/etc/fstab

arch-chroot /mnt

echo jasonk-home > /etc/hostname


edit /etc/hosts

127.0.0.1   localhost
::1         localhost
127.0.1.1   jasonk-home.localdomain   jasonk-home
::1         jasonk-home.localdomain   jasonk-home

chsh -s /bin/zsh

timedatectl list-timezones
timedatectl set-timezone America/New_York

systemctl enable systemd-timesyncd

pacman -S networkmanager nvidia qtile lightdm git lightdm-gtk-greeter xorg bluez blue-utils blueman
systemctl enable NetworkManager
systemctl enable lightdm
systemctl enable bluetooth

cd /opt
git clone https://aur.archlinux.org/yay-git.git

yay -S optimus-manager optimus-manager-qt
system enable optimus-manager

vim /etc/locale.gen
locale-gen
echo LANG=en_US.UTF-8 > /etc/locale.con
export LANG=en_US.UTF-8

passwd

vim /etc/mkinitcpio.conf

Add btrfs to HOOKS. This will make sure btrfs module will be added to linux boot image when generating.

HOOKS=”base udev autodetect modconf block btrfs filesystems keyboard fsck”

mkinitcpio -p linux

bootctl --path=/boot install

blkid | grep -i p2 | awk '{ print $2 }' > /boot/loader/entries/arch.conf

title Arch Linux 
linux /vmlinuz-linux
initrd /intel-ucode.img
initrd /initramfs-linux.img
options root=UUID=UUID_FROM_ABOVE rootflags=subvol=@ rw

Edit /boot/loader/loader.conf and add below:
default arch


optimus-manager

Navigate to /boot/loader/entries and check the configurations
    Default
$ exit
$ umount -R /mnt
$ reboot
